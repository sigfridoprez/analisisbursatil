/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFram.java
 *
 * Created on 21-abr-2009, 22:04:18
 */
package caafe.main;

import autorizacion.servicio.ServicioAutorizacion;
import caafe.autorizacion.Autoriza;
import caafe.cliente.Cliente;
import caafes.def.Clientes;
import caafes.def.Facturas;
import cafe.modellist.DatoVO;
import cafe.modellist.MiListModel;
import clientes.servicio.ServicioCliente;
import com.nilo.plaf.nimrod.NimRODLookAndFeel;
import com.nilo.plaf.nimrod.NimRODTheme;
import factura.servicio.ServicioFactura;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import otro.splash;
import utils.HibernateUtil;
import caafe.factura.Factura;
import caafes.def.Autorizaciones;
import java.text.SimpleDateFormat;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import otro.Acerca;
import otro.CambiaPass;
import otro.MiFrame;
import otro.Pass;

/**
 *
 * @author Edgar
 */
public class MainFram extends MiFrame {

    private static int time = 0;
    private String avisos;
    private Cliente frmCliente = null;
    private Factura frmFactura = null;
    private Autoriza frmAutoriza = null;
    private Acerca frmAcerca = null;
    private Pass frmPass = null;
    private static JFrame splash;
    private static Timer timer;
    private CambiaPass frmCambiapass = null;
    private int iListaSeleccionada = -1;
    private final int LISTA_CLIENTE = 0;
    private final int LISTA_FACTURA = 1;
    private final int LISTA_AUTORIZACION = 3;
    private int intMenu = 0;

    /** Creates new form MainFram */
    public MainFram() {
        initComponents();

        ServicioAutorizacion srvAutorizacion = new ServicioAutorizacion();
        ServicioCliente srvCliente = new ServicioCliente();
        ServicioFactura srvFactura = new ServicioFactura();
        List<Autorizaciones> listAutoriza = srvAutorizacion.obtieneListaAutorizaCaduca();
        Facturas facturaVO;
        Clientes clienteVO;
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        Object[] obRow;
        tableModel.getDataVector().clear();
        SimpleDateFormat dateForma = new SimpleDateFormat("dd/MM/yyyy");
        Long index;

        if (listAutoriza != null) {
            for (Autorizaciones autorizaVO : listAutoriza) {
                facturaVO = srvFactura.obtieneFacturaFolioAutorizacion(autorizaVO.getIdAutorizacion());
                clienteVO = srvCliente.obtieneCliente(facturaVO.getId().getIdCliente(), null);

                obRow = new Object[7];
                obRow[0] = String.valueOf(autorizaVO.getIdAutorizacion());
                obRow[1] = String.valueOf(facturaVO.getId().getIdFolio());
                obRow[2] = dateForma.format(autorizaVO.getFechaCreacion());
                obRow[3] = dateForma.format(autorizaVO.getCaducidad());
                obRow[4] = autorizaVO.getAutorizo();
                obRow[5] = clienteVO.getNombre() + "" + clienteVO.getApellidos();
                obRow[6] = clienteVO.getRfc();

                tableModel.addRow(obRow);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jbUltimos = new javax.swing.JButton();
        jbExpira = new javax.swing.JButton();
        jbAutoriza = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbCliente = new javax.swing.JButton();
        jbFactura = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxBuscador = new javax.swing.JTextField();
        jbBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jbMostrar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlClientes = new javax.swing.JList();
        jScrollPane6 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlFacturas = new javax.swing.JList();
        jScrollPane7 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlAutoriza = new javax.swing.JList();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jtBusquedas = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jmCliente = new javax.swing.JMenuItem();
        jmFactura = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        Macerca = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Caafe's");
        setBackground(new java.awt.Color(153, 255, 255));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/otro/Logo.gif"))); // NOI18N
        jLabel5.setMaximumSize(new java.awt.Dimension(1594, 1240));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel4.setText("Control Autorizaciónes");

        jbUltimos.setText("Últimas Agregadas");
        jbUltimos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUltimosActionPerformed(evt);
            }
        });

        jbExpira.setText("Proximas a Expirar");
        jbExpira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExpiraActionPerformed(evt);
            }
        });

        jbAutoriza.setText("Mostrar Autorizacion");
        jbAutoriza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAutorizaActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NumAutirización", "Folio Factura", "Fecha de Creacion", "Caducidad", "Autorizo", "Cliente", "RFC"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jTable1);

        jScrollPane8.setViewportView(jScrollPane2);

        jbCliente.setText("Mostrar Cliente");
        jbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClienteActionPerformed(evt);
            }
        });

        jbFactura.setText("Mostrar Facturas");
        jbFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFacturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jbUltimos)
                .addGap(18, 18, 18)
                .addComponent(jbExpira)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jbAutoriza)
                .addGap(18, 18, 18)
                .addComponent(jbCliente)
                .addGap(18, 18, 18)
                .addComponent(jbFactura)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAutoriza, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbUltimos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExpira, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Autorizaciones", jPanel1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel1.setText("Nombre o RFC a buscar:");

        jbBuscar.setText("BUSCAR");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel3.setText("Cliente");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel6.setText("Factura");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel7.setText("Autorización");

        jbMostrar.setText("MOSTRAR");
        jbMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMostrarActionPerformed(evt);
            }
        });

        jlClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jlClientes.setDragEnabled(true);
        jlClientes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlClientesValueChanged(evt);
            }
        });
        jlClientes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jlClientesFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jlClientes);

        jScrollPane5.setViewportView(jScrollPane1);

        jlFacturas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlFacturasValueChanged(evt);
            }
        });
        jlFacturas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jlFacturasFocusLost(evt);
            }
        });
        jScrollPane3.setViewportView(jlFacturas);

        jScrollPane6.setViewportView(jScrollPane3);

        jlAutoriza.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlAutorizaValueChanged(evt);
            }
        });
        jlAutoriza.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jlAutorizaFocusLost(evt);
            }
        });
        jScrollPane4.setViewportView(jlAutoriza);

        jScrollPane7.setViewportView(jScrollPane4);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel13.setText("Control Administrativo");

        jtBusquedas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        jScrollPane9.setViewportView(jtBusquedas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(jLabel13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Busqueda por cliente", jPanel2);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel8.setText("Control Administrativo");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel9.setText("de Autorizaciones y");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel10.setText("Facturas E's");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel11.setText("Crtl+C Para agregar Cliente");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel12.setText("Crtl+F Para agregar Factura");

        fileMenu.setText("Archivo");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        jMenu2.setText("Nuevo");

        jmCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jmCliente.setText("Cliente");
        jmCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmClienteActionPerformed(evt);
            }
        });
        jMenu2.add(jmCliente);

        jmFactura.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jmFactura.setText("Factura");
        jmFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmFacturaActionPerformed(evt);
            }
        });
        jMenu2.add(jmFactura);

        fileMenu.add(jMenu2);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setText("Salir");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem4);

        menuBar.add(fileMenu);

        jMenu1.setText("Editar");

        jMenuItem8.setText("Seguridad");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        menuBar.add(jMenu1);

        helpMenu.setText("Acerca");

        Macerca.setText("Acerca");
        Macerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MacercaActionPerformed(evt);
            }
        });
        helpMenu.add(Macerca);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 218, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
    }//GEN-LAST:event_fileMenuActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        ServicioCliente cliente = new ServicioCliente();
        List<Clientes> lstClientes = cliente.obtieneClientes(jtxBuscador.getText());
        MiListModel lstModelo = new MiListModel();

        if (lstClientes != null) {
            for (Clientes clienteVO : lstClientes) {
//                if(clienteVO.getValido()=='S'){
//                    lstModelo.addElement(clienteVO.getIdCliente(), clienteVO.getNombre() + " " + clienteVO.getApellidos());
//                }
                lstModelo.addElement(clienteVO.getIdCliente(), clienteVO.getNombre() + " " + clienteVO.getApellidos());
            }
        }
        jlClientes.setModel(lstModelo);
        jlClientes.clearSelection();
        jlAutoriza.clearSelection();
        jlFacturas.clearSelection();

}//GEN-LAST:event_jbBuscarActionPerformed

    private void jlClientesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlClientesValueChanged

        int index = 0;
        DatoVO datoVO;
        MiListModel lstModelo;
        index = jlClientes.getLeadSelectionIndex();
        MiListModel lstModeloFactura = null;
        ServicioFactura srvFactura;
        List<Facturas> lstFacturas = null;
        iListaSeleccionada = LISTA_CLIENTE;
        ServicioCliente srvCliente = new ServicioCliente();
        Clientes cliente;
        Object[] obRow;

        DefaultTableModel tblModel = new DefaultTableModel();

        srvFactura = new ServicioFactura();
        lstModelo = (MiListModel) jlClientes.getModel();
        lstModeloFactura = new MiListModel();
        datoVO = lstModelo.getElementVO(index);
        cliente = srvCliente.obtieneCliente(datoVO.getBdId(), "");
        lstFacturas = srvFactura.obtieneListaFacturas(datoVO.getBdId());

        if (lstFacturas != null) {
            for (Facturas facturas : lstFacturas) {
                if (facturas.getValido() == 'S') {
                    System.out.println(facturas.getValido());
                    lstModeloFactura.addElement(facturas.getId().getIdFolio(), String.valueOf(facturas.getId().getIdFolio()));
                }
            }
            jlFacturas.setModel(lstModeloFactura);
        }
        tblModel.addColumn("Nombre");
        tblModel.addColumn("Apellidos");
        tblModel.addColumn("RFC");
        tblModel.addColumn("Calle y numero");
        tblModel.addColumn("Colonia");
        tblModel.addColumn("Codigo postal");
        tblModel.addColumn("Delegacion/Municipio");
        tblModel.addColumn("Ciudad");
        tblModel.addColumn("Telefono");

        obRow = new Object[9];
        obRow[0] = cliente.getNombre();
        obRow[1] = cliente.getApellidos();
        obRow[2] = cliente.getRfc();
        obRow[3] = cliente.getCalleNumero();
        obRow[4] = cliente.getColonia();
        obRow[5] = cliente.getCodigoPostal();
        obRow[6] = cliente.getDelegacionMunicipio();
        obRow[7] = cliente.getCiudad();
        obRow[8] = cliente.getTelefono();
        tblModel.addRow(obRow);

        jtBusquedas.setModel(tblModel);
}//GEN-LAST:event_jlClientesValueChanged

    private void jbUltimosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUltimosActionPerformed
        ServicioAutorizacion srvAutorizacion = new ServicioAutorizacion();
        ServicioCliente srvCliente = new ServicioCliente();
        ServicioFactura srvFactura = new ServicioFactura();
        List<Autorizaciones> listAutoriza = srvAutorizacion.obtieneListaAutorizaCaduca();
        Facturas facturaVO;
        Clientes clienteVO;
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        Object[] obRow;
        tableModel.getDataVector().clear();
        SimpleDateFormat dateForma = new SimpleDateFormat("dd/MM/yyyy");
        Long index;

        if (listAutoriza != null) {
            for (Autorizaciones autorizaVO : listAutoriza) {
                facturaVO = srvFactura.obtieneFacturaFolioAutorizacion(autorizaVO.getIdAutorizacion());
                clienteVO = srvCliente.obtieneCliente(facturaVO.getId().getIdCliente(), null);

                obRow = new Object[7];
                obRow[0] = String.valueOf(autorizaVO.getIdAutorizacion());
                obRow[1] = String.valueOf(facturaVO.getId().getIdFolio());
                obRow[2] = dateForma.format(autorizaVO.getFechaCreacion());
                obRow[3] = dateForma.format(autorizaVO.getCaducidad());
                obRow[4] = autorizaVO.getAutorizo();
                obRow[5] = clienteVO.getNombre() + "" + clienteVO.getApellidos();
                obRow[6] = clienteVO.getRfc();

                tableModel.addRow(obRow);
            }


        }
}//GEN-LAST:event_jbUltimosActionPerformed

    private void jbExpiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExpiraActionPerformed
        ServicioAutorizacion srvAutorizacion = new ServicioAutorizacion();
        ServicioCliente srvCliente = new ServicioCliente();
        ServicioFactura srvFactura = new ServicioFactura();
        List<Autorizaciones> listAutoriza = srvAutorizacion.obtieneListaAutorizaCreacion();
        Facturas facturaVO;
        Clientes clienteVO;
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        Object[] obRow;
        tableModel.getDataVector().clear();
        SimpleDateFormat dateForma = new SimpleDateFormat("dd/MM/yyyy");

        if (listAutoriza != null) {
            for (Autorizaciones autorizaVO : listAutoriza) {
                facturaVO = srvFactura.obtieneFacturaFolioAutorizacion(autorizaVO.getIdAutorizacion());
                clienteVO = srvCliente.obtieneCliente(facturaVO.getId().getIdCliente(), null);

                obRow = new Object[7];
                obRow[0] = String.valueOf(autorizaVO.getIdAutorizacion());
                obRow[1] = String.valueOf(facturaVO.getId().getIdFolio());
                obRow[2] = dateForma.format(autorizaVO.getFechaCreacion());
                obRow[3] = dateForma.format(autorizaVO.getCaducidad());
                obRow[4] = autorizaVO.getAutorizo();
                obRow[5] = clienteVO.getNombre() + " " + clienteVO.getApellidos();
                obRow[6] = clienteVO.getRfc();

                tableModel.addRow(obRow);
            }


        }// TODO add your handling code here:
}//GEN-LAST:event_jbExpiraActionPerformed

    private void jlFacturasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlFacturasValueChanged
        int index = 0;
        DatoVO datoVO;
        MiListModel lstModelo;
        index = jlFacturas.getLeadSelectionIndex();
        MiListModel lstModelAutorizacion = null;
        autorizacion.servicio.ServicioAutorizacion srvAutorizacion;
        ServicioFactura srvFactura;
        Facturas factura;
        Autorizaciones autorizacion = null;
        iListaSeleccionada = LISTA_FACTURA;
        DefaultTableModel tblModel = new DefaultTableModel();
        Object[] obRow;
        Clientes cliente;
        ServicioCliente srvCliente = new ServicioCliente();

        srvFactura = new ServicioFactura();
        srvAutorizacion = new ServicioAutorizacion();
        lstModelo = (MiListModel) jlFacturas.getModel();
        lstModelAutorizacion = new MiListModel();
        datoVO = lstModelo.getElementVO(index);

        factura = srvFactura.obtieneFactura(datoVO.getBdId());
        if (factura.getIdAutorizacion() != null) {
            autorizacion = srvAutorizacion.obtieneAutorizacion(factura.getIdAutorizacion());
        }


        if (autorizacion != null) {
            lstModelAutorizacion.addElement(autorizacion.getIdAutorizacion(), String.valueOf(autorizacion.getIdAutorizacion()));
            jlAutoriza.setModel(lstModelAutorizacion);
        } else {
            lstModelAutorizacion.limpiaModelo();
            jlAutoriza.setModel(lstModelAutorizacion);
        }
        factura = srvFactura.obtieneFactura(datoVO.getBdId());
        cliente = srvCliente.obtieneCliente(factura.getId().getIdCliente(), null);

        tblModel.addColumn("Folio");
        tblModel.addColumn("Cliente");
        tblModel.addColumn("Cantidad");
        tblModel.addColumn("Descripcion");
        tblModel.addColumn("Total");

        obRow = new Object[5];
        obRow[0] = factura.getId().getIdFolio();
        obRow[1] = cliente.getNombre() + " " + cliente.getApellidos();
        obRow[2] = factura.getCantidad();
        if (factura.getDescripcion().startsWith("1")) {
            obRow[3] = factura.getDescripcion();
        } else if (factura.getDescripcion().startsWith("2")) {
            obRow[3] = "Factura";
        } else if (factura.getDescripcion().startsWith("3")) {
            obRow[3] = "Nota de Arrendamiento";
        } else {
            obRow[3] = "";
        }
        obRow[4] = factura.getCostoTrabajo();
        tblModel.addRow(obRow);

        jtBusquedas.setModel(tblModel);
}//GEN-LAST:event_jlFacturasValueChanged

    private void jbMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMostrarActionPerformed
        MiListModel lstModelo;
        int index;
        DatoVO dato;

        switch (iListaSeleccionada) {
            case LISTA_CLIENTE:
                lstModelo = (MiListModel) jlClientes.getModel();
                index = jlClientes.getLeadSelectionIndex();
                dato = lstModelo.getElementVO(index);

                if (frmCliente == null) {
                    frmCliente = new Cliente();
                }

                frmCliente.actualizaForm(Cliente.CONSULTAR, dato.getBdId());
                frmCliente.setAlwaysOnTop(true);
                frmCliente.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                frmCliente.setLocationRelativeTo(this);

                frmCliente.setVisible(true);

                break;
            case LISTA_FACTURA:
                lstModelo = (MiListModel) jlFacturas.getModel();
                index = jlFacturas.getLeadSelectionIndex();
                dato = lstModelo.getElementVO(index);

                if (frmFactura == null) {
                    frmFactura = new Factura();
                }
                frmFactura.actualizaForm(Cliente.CONSULTAR, dato.getBdId());
                frmFactura.setAlwaysOnTop(true);
                frmFactura.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                frmFactura.setLocationRelativeTo(this);

                frmFactura.setVisible(true);
                break;
            case LISTA_AUTORIZACION:
                lstModelo = (MiListModel) jlAutoriza.getModel();
                index = jlAutoriza.getLeadSelectionIndex();
                dato = lstModelo.getElementVO(index);

                if (frmAutoriza == null) {
                    frmAutoriza = new Autoriza();
                }
                frmAutoriza.actualizaForm(Factura.CONSULTAR, dato.getBdId());
                frmAutoriza.setAlwaysOnTop(true);
                frmAutoriza.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                frmAutoriza.setLocationRelativeTo(this);

                frmAutoriza.setVisible(true);
                break;
            default:
                JOptionPane.showMessageDialog(this, "Ningun campo seleccionado", "Error", JOptionPane.ERROR_MESSAGE);
        }

//        if (jlClientes.isSelectionEmpty()) {
//            if (jlFacturas.isSelectionEmpty()) {
//                if (jlAutoriza.isSelectionEmpty()) {
//                    JOptionPane.showMessageDialog(this, "Ningun campo seleccionado", "Error", JOptionPane.ERROR_MESSAGE);
//
//                } else {
//                    jlAutoriza.getLeadSelectionIndex();
//                }
//            } else {
//                jlFacturas.getLeadSelectionIndex();
//            }
//        } else {
//            jlClientes.getLeadSelectionIndex();
//        }

        jlClientes.clearSelection();
        jlAutoriza.clearSelection();
        jlFacturas.clearSelection();
        iListaSeleccionada = -1;
}//GEN-LAST:event_jbMostrarActionPerformed

    private void jlClientesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jlClientesFocusLost
         if ((jlFacturas.isSelectionEmpty()&&jlAutoriza.isSelectionEmpty())==false) {
           jlClientes.clearSelection();
        }//GEN-HEADEREND:event_jlClientesFocusLost
    }//GEN-LAST:event_jlClientesFocusLost

    private void jlFacturasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jlFacturasFocusLost
        if ((jlClientes.isSelectionEmpty() && jlAutoriza.isSelectionEmpty()) == false) {
            jlFacturas.clearSelection();
        }
    // TODO add your handling code here:
    }//GEN-LAST:event_jlFacturasFocusLost

    private void jlAutorizaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jlAutorizaFocusLost
        if ((jlClientes.isSelectionEmpty() && jlFacturas.isSelectionEmpty()) == false) {
            jlAutoriza.clearSelection();
        }
    // TODO add your handling code here:
    }//GEN-LAST:event_jlAutorizaFocusLost

    private void jmClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmClienteActionPerformed

        if (frmPass == null) {
            frmPass = new Pass(this, 0);
        }
        frmPass.limpiaFrame();
        frmPass.setVisible(true);
        frmPass.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        frmPass.setAlwaysOnTop(true);
        frmPass.setLocationRelativeTo(this);
        intMenu = 1;
}//GEN-LAST:event_jmClienteActionPerformed

    private void jmFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmFacturaActionPerformed
        if (frmPass == null) {
            frmPass = new Pass(this, 0);
        }
        frmPass.limpiaFrame();
        frmPass.setVisible(true);
        frmPass.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        frmPass.setAlwaysOnTop(true);
        frmPass.setLocationRelativeTo(this);
        intMenu = 2;
    }//GEN-LAST:event_jmFacturaActionPerformed

    private void jlAutorizaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlAutorizaValueChanged
        iListaSeleccionada = LISTA_AUTORIZACION;
        DatoVO dato;
        int index = 0;
        DefaultTableModel tblModel = new DefaultTableModel();
        Object[] obRow;
        ServicioAutorizacion srvAutorizacion = new ServicioAutorizacion();
        ServicioFactura srvFactura = new ServicioFactura();
        ServicioCliente srvCliente = new ServicioCliente();
        MiListModel lstModelo = new MiListModel();

        lstModelo = (MiListModel) jlAutoriza.getModel();
        index = jlAutoriza.getSelectedIndex();
        dato = lstModelo.getElementVO(index);
        Facturas factura = srvFactura.obtieneFacturaFolioAutorizacion(dato.getBdId());
        Autorizaciones autoriza = srvAutorizacion.obtieneAutorizacion(dato.getBdId());
        Clientes cliente = srvCliente.obtieneCliente(factura.getId().getIdCliente(), null);

        tblModel.addColumn("Numero autorización");
        tblModel.addColumn("Folios");
        tblModel.addColumn("Caduca");
        tblModel.addColumn("Folio factura");
        tblModel.addColumn("Solicitante");
        tblModel.addColumn("Autorizo");
        tblModel.addColumn("Nombre Cliente");

        obRow = new Object[7];
        obRow[0] = autoriza.getIdAutorizacion();
        obRow[1] = autoriza.getFolioInicio() + " - " + autoriza.getFolioFinal();
        obRow[2] = autoriza.getCaducidad();
        obRow[3] = factura.getId().getIdFolio();
        obRow[4] = autoriza.getSolicitante();
        obRow[5] = autoriza.getAutorizo();
        obRow[6] = cliente.getNombre() + " " + cliente.getApellidos();
        tblModel.addRow(obRow);

        jtBusquedas.setModel(tblModel);
    }//GEN-LAST:event_jlAutorizaValueChanged

    private void jbAutorizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAutorizaActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        ListSelectionModel listModel = jTable1.getSelectionModel();
        String iD = "";

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            if (listModel.isSelectedIndex(i)) {
                iD = (String) tableModel.getValueAt(i, 0);
                break;
            }
        }
        if (!iD.equals("")) {
            if (frmAutoriza == null) {
                frmAutoriza = new Autoriza();
            }
            frmAutoriza.actualizaForm(Factura.CONSULTAR, Long.valueOf(iD));
            frmAutoriza.setAlwaysOnTop(true);
            frmAutoriza.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            frmAutoriza.setLocationRelativeTo(this);

            frmAutoriza.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Ningun campo seleccionado", "Error", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_jbAutorizaActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        if (frmCambiapass == null) {
            frmCambiapass = new CambiaPass();
        }
        frmCambiapass.setAlwaysOnTop(true);
        frmCambiapass.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        frmCambiapass.setLocationRelativeTo(this);
        frmCambiapass.modelo();

        frmCambiapass.setVisible(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClienteActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        ListSelectionModel listModel = jTable1.getSelectionModel();
        String iD = "";
        ServicioFactura srvFactura;
        Facturas facturaVO;

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            if (listModel.isSelectedIndex(i)) {
                iD = (String) tableModel.getValueAt(i, 1);
                break;
            }
        }
        if (!iD.equals("")) {
            if (frmCliente == null) {
                frmCliente = new Cliente();
            }
            srvFactura = new ServicioFactura();
            facturaVO = srvFactura.obtieneFactura(Long.valueOf(iD));

            frmCliente.actualizaForm(Factura.CONSULTAR, facturaVO.getId().getIdCliente());
            frmCliente.setAlwaysOnTop(true);
            frmCliente.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            frmCliente.setLocationRelativeTo(this);

            frmCliente.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Ningun campo seleccionado", "Error", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_jbClienteActionPerformed

    private void jbFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFacturaActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        ListSelectionModel listModel = jTable1.getSelectionModel();
        String iD = "";

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            if (listModel.isSelectedIndex(i)) {
                iD = (String) tableModel.getValueAt(i, 1);
                break;
            }
        }
        if (!iD.equals("")) {
            if (frmFactura == null) {
                frmFactura = new Factura();
            }
            frmFactura.actualizaForm(Factura.CONSULTAR, Long.valueOf(iD));
            frmFactura.setAlwaysOnTop(true);
            frmFactura.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            frmFactura.setLocationRelativeTo(this);

            frmFactura.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Ningun campo seleccionado", "Error", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_jbFacturaActionPerformed

    private void MacercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MacercaActionPerformed
        if (frmAcerca == null) {
            frmAcerca = new Acerca();
        }
        frmAcerca.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frmAcerca.setVisible(true);
        frmAcerca.setAlwaysOnTop(true);
        frmAcerca.setLocationRelativeTo(null);
    }//GEN-LAST:event_MacercaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Timmer();
            }
        });
    }

    public static void Splash() {

        splash = new splash();
        NimRODTheme nt = new NimRODTheme();
        nt.setPrimary1(new Color(10, 10, 10));
        nt.setPrimary2(new Color(100, 100, 100));
        nt.setPrimary3(new Color(30, 30, 30));

        NimRODLookAndFeel NimRODLF = new NimRODLookAndFeel();
        NimRODLookAndFeel.setCurrentTheme(nt);
        try {
            UIManager.setLookAndFeel(NimRODLF);

        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFram.class.getName()).log(Level.SEVERE, null, ex);
        }

        SwingUtilities.updateComponentTreeUI(splash);

        splash.setVisible(true);
        splash.setLocationRelativeTo(null);
    }

    public static void MainFram() {
        MainFram frame = new MainFram();
        frame.setVisible(true);
        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
        timer.stop();
    }

    public static void Timmer() {
        timer = new Timer(1000, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (time == 0) {
                    Splash();
                }
                if (time == 1) {
                    HibernateUtil.getSessionFactory();
                    splash.setVisible(false);
                    MainFram();
                }
                time = time + 1;
                System.out.println(time);
            }
        });
        timer.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Macerca;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAutoriza;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCliente;
    private javax.swing.JButton jbExpira;
    private javax.swing.JButton jbFactura;
    private javax.swing.JButton jbMostrar;
    private javax.swing.JButton jbUltimos;
    private javax.swing.JList jlAutoriza;
    private javax.swing.JList jlClientes;
    private javax.swing.JList jlFacturas;
    private javax.swing.JMenuItem jmCliente;
    private javax.swing.JMenuItem jmFactura;
    private javax.swing.JTable jtBusquedas;
    private javax.swing.JTextField jtxBuscador;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

    @Override
    public void cbPasswprd() {
        if (intMenu == 1) {
            if (frmCliente == null) {
                frmCliente = new Cliente();
            }
            frmCliente.actualizaForm(Cliente.NUEVO, 0);
            frmCliente.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frmCliente.setVisible(true);
            frmCliente.setAlwaysOnTop(true);
            frmCliente.setLocationRelativeTo(null);

        } else if (intMenu == 2) {
            if (frmFactura == null) {
                frmFactura = new Factura();
            }
            frmFactura.actualizaForm(Cliente.NUEVO, 0);
            frmFactura.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frmFactura.setVisible(true);
            frmFactura.setAlwaysOnTop(true);
            frmFactura.setLocationRelativeTo(null);
        }

    }
}
