/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OtroFrame.java
 *
 * Created on 21-abr-2009, 22:36:42
 */
package caafe.factura;

import caafe.autorizacion.Autoriza;
import caafe.table.celleditor.ButtonCellEditor;
import caafe.table.tablemodel.DetalleFacturaVO;
import caafes.def.DetalleFactura;
import caafe.table.tablemodel.TableModelDetalle;
import caafes.def.Autorizaciones;
import caafes.def.Clientes;
import caafes.def.Facturas;
import caafes.def.FacturasPK;
import clientes.servicio.ServicioCliente;
import factura.servicio.ServicioFactura;
import facturas.util.DetalleFacturaUtil;
import facturas.util.FacturasUtil;
import java.math.BigDecimal;
import java.text.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import javax.swing.JOptionPane;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumn;
import otro.Constantes;
import otro.MiJDialog;
import otro.Pass;

/**
 *
 * @author Edgar
 */
public class Factura extends MiJDialog {

    private boolean bEstado;
    private Autoriza jfAutoriza;
    private Clientes clienteVO;
    private SeleccionaCliente seleccionaCliente = null;
    private int iEstatus;
    public final static int NUEVO = 100;
    public final static int CONSULTAR = 101;
    public final static int EDITAR = 102;
    private Facturas nuevo;
    private Clientes consultaCliente;
    private Pass frmPass;
    private Autoriza jpAutoriza = null;

    /** Creates new form OtroFrame */
    public Factura() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jbAceptar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jtxNombre = new javax.swing.JTextField();
        jtxRFC = new javax.swing.JTextField();
        jtxApellido = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtxFolio = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtxSubtotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtxIVA = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jbSelccionaCliente = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jtxTotal = new javax.swing.JTextField();
        jbSelccionaCliente1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDetalles = new javax.swing.JTable();
        jbEliminaROw = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Factura");
        setAlwaysOnTop(true);

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellidos");

        jLabel3.setText("RFC");

        jbAceptar.setText("Agregar");
        jbAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAceptarActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jtxNombre.setEnabled(false);

        jtxRFC.setEnabled(false);

        jtxApellido.setEnabled(false);

        jLabel9.setText("Folio");

        jtxFolio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxFolioFocusLost(evt);
            }
        });
        jtxFolio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxFolioKeyReleased(evt);
            }
        });

        jLabel11.setText("IVA");

        jtxSubtotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxSubtotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxSubtotalFocusLost(evt);
            }
        });

        jLabel12.setText("Sub Total");

        jtxIVA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel15.setText("$");

        jLabel16.setText("$");

        jbSelccionaCliente.setText("Seleccionar Cliente");
        jbSelccionaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelccionaClienteActionPerformed(evt);
            }
        });

        jLabel14.setText("Total");

        jLabel17.setText("$");

        jtxTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxTotalActionPerformed(evt);
            }
        });
        jtxTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxTotalFocusLost(evt);
            }
        });
        jtxTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxTotalKeyReleased(evt);
            }
        });

        jbSelccionaCliente1.setText("Agregar Detalle");
        jbSelccionaCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelccionaCliente1ActionPerformed(evt);
            }
        });

        jtDetalles.setModel(new caafe.table.tablemodel.TableModelDetalle());
        jScrollPane1.setViewportView(jtDetalles);

        jbEliminaROw.setText("Eliminar renglon");
        jbEliminaROw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminaROwActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Agregar");
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Salir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Acerca");

        jMenuItem2.setText("Ayuda");
        jMenu2.add(jMenuItem2);

        jMenuItem4.setText("Acerca...");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxRFC, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                            .addComponent(jtxNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                            .addComponent(jtxFolio, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbSelccionaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                            .addComponent(jtxApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbSelccionaCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbEliminaROw, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jbAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxIVA, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(221, 221, 221))))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtxFolio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSelccionaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxRFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSelccionaCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEliminaROw, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel17)
                    .addComponent(jtxTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15)
                    .addComponent(jtxSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel16)
                    .addComponent(jtxIVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actualizaForm(int iEstatus, BigDecimal iDCliente) {
        this.iEstatus = iEstatus;

        if (iEstatus == CONSULTAR) {

            jtxApellido.setEnabled(false);
            jtxFolio.setEnabled(false);
            jtxIVA.setEnabled(false);
            jtxNombre.setEnabled(false);
            jtxRFC.setEnabled(false);
            jtxTotal.setEnabled(false);
            jbSelccionaCliente.setVisible(false);


            ServicioFactura srvFactura = new ServicioFactura();
            ServicioCliente srvCliente = new ServicioCliente();


            nuevo = srvFactura.obtieneFactura(iDCliente);
            consultaCliente = srvCliente.obtieneCliente(nuevo.getFacturasPK().getIdCliente(), null);

            jtxApellido.setText(consultaCliente.getApellidos());
//            jtxDescripcion.setText(nuevo.getDescripcion());
            jtxFolio.setText(String.valueOf(nuevo.getFacturasPK().getIdFolioFactura()));

//            jtxIVA.setText(nuevo.getCostoTrabajo().multiply(new BigDecimal(".15")).toString());

            jtxNombre.setText(consultaCliente.getNombre());
            jtxRFC.setText(consultaCliente.getRfc());

//            jtxTotal.setText(nuevo.getCostoTrabajo().toString());
//            jtxDescripcion.setText(nuevo.getDescripcion());


            jbAceptar.setText("Editar");
        }
        if (iEstatus == NUEVO) {
            jtxFolio.setEnabled(true);
            jtxIVA.setEnabled(true);
            jtxTotal.setEnabled(true);
            jbSelccionaCliente.setVisible(true);

            jbAceptar.setText("Agregar");
            limpiaForma();
        }
    }
    private void jbAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAceptarActionPerformed
        ServicioFactura srvFactura = new ServicioFactura();


        switch (iEstatus) {
            case NUEVO:
                estado();
                desborde();
                if (bEstado == true) {
                    agregaFactura(srvFactura);
                }
                break;
            case EDITAR:
                modificaFactura(srvFactura);
                JOptionPane.showMessageDialog(this, "Datos Guardados con éxito", "", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                break;
            case CONSULTAR:
                if (frmPass == null) {
                    frmPass = new Pass(this, 1);
                }
                frmPass.limpiaFrame();
                frmPass.setVisible(true);
                frmPass.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                frmPass.setAlwaysOnTop(true);
                frmPass.setLocationRelativeTo(this);
                break;
        }
}//GEN-LAST:event_jbAceptarActionPerformed

    public void modificaFactura(ServicioFactura srvFactura) {
//        nuevo.setCostoTrabajo(new BigDecimal(jtxTotal.getText()));
//        colocaIdentificador();
        nuevo.setExportado(new Character('N'));

        srvFactura.modificaFactura(nuevo);
        limpiaForma();
    }

//    private void colocaValorCB() {
//        String strCheck = nuevo.getDescripcion() != null ? nuevo.getDescripcion() : "";
//
//        if (!strCheck.isEmpty()) {
//            if (nuevo.getDescripcion().startsWith("1")) {
//                jcbDescripcion.setSelectedItem("Otro");
//            }
//            if (nuevo.getDescripcion().startsWith("2")) {
//                jcbDescripcion.setSelectedItem("Factura");
//            }
//            if (nuevo.getDescripcion().startsWith("3")) {
//                jcbDescripcion.setSelectedItem("Nota de Arrendamiento");
//            }
//        }
//    }
    private void limpiaForma() {
        jtxApellido.setText("");
        jtxFolio.setText("");
        jtxIVA.setText("");
        jtxNombre.setText("");
        jtxRFC.setText("");
        jtxTotal.setText("");
        jtxSubtotal.setText("");
    }

    private void agregaFactura(ServicioFactura srvFactura) {
        String strFactura;
        List<Facturas> lista;

        if (bEstado == true) {
            strFactura = jtxFolio.getText();
            lista = srvFactura.obtieneListaFacturasFolio(new BigDecimal(strFactura));
            if (lista != null) {
                if (lista.isEmpty()) {
                    creaFactura(srvFactura);
                } else {
                    JOptionPane.showMessageDialog(this, "El Folio ya exciste", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                creaFactura(srvFactura);
            }
        }
    }

//    private void colocaIdentificador() {
//        String cbCheck = "";
//        cbCheck = (String) jcbDescripcion.getSelectedItem();
//        if (!cbCheck.isEmpty()) {
//            if (cbCheck.equals("Otro")) {
//                nuevo.setDescripcion("1" + jtxDescripcion.getText());
//            } else if (cbCheck.equals("Factura")) {
//                nuevo.setDescripcion("");
//                nuevo.setDescripcion("2");
//            } else if (cbCheck.equals("Nota de Arrendamiento")) {
//                nuevo.setDescripcion("");
//                nuevo.setDescripcion("3");
//            }
//        }
//    }
    private void creaFactura(ServicioFactura srvFactura) {
        nuevo = new Facturas();
        FacturasUtil nuevoSend = new FacturasUtil();
        FacturasPK iD = new FacturasPK(clienteVO.getIdCliente(), new BigDecimal(jtxFolio.getText()));

        nuevo.setFacturasPK(iD);
        nuevo.setFechaCreacion(new Date());
        nuevo.setExportado(new Character('N'));

        nuevoSend.setFacturas(nuevo);
        nuevoSend.setDetalleFactura(getCollectionDetalle(iD));

        srvFactura.insertaFactura(nuevoSend);

        limpiaForma();
    }

    private Collection<DetalleFacturaUtil> getCollectionDetalle(FacturasPK iD) {
        DetalleFactura voDetalleFactura;
        DetalleFacturaVO voDetalle;
        TableModelDetalle modelo = (TableModelDetalle) jtDetalles.getModel();
        Collection<DetalleFacturaUtil> lstDetalle = new ArrayList<DetalleFacturaUtil>();
        Autorizaciones autorizaciones;
        DetalleFacturaUtil detalleFacturaUtil;

        for (int i = 0; i < modelo.getRowCount(); i++) {
            voDetalle = modelo.getDetalleFacturaVO(i);
            detalleFacturaUtil = new DetalleFacturaUtil();

            voDetalleFactura = new DetalleFactura(iD.getIdCliente(), iD.getIdFolioFactura(), new BigDecimal(i),
                    voDetalle.getCantidad(), voDetalle.getAnotaciones(), voDetalle.getTipoTrabajo(),
                    voDetalle.getCostoTrabajo());

            if (voDetalle.getAutorizacionVO() != null) {
                autorizaciones = new Autorizaciones(iD.getIdCliente(), iD.getIdFolioFactura(), new BigDecimal(i), voDetalle.getAutorizacionVO().getIdAutorizacion(),
                        voDetalle.getAutorizacionVO().getFolioInicio(), voDetalle.getAutorizacionVO().getFolioFinal(),
                        voDetalle.getAutorizacionVO().getCaducidad(),
                        voDetalle.getAutorizacionVO().getAutorizo(), voDetalle.getAutorizacionVO().getFechaCreacion());
                detalleFacturaUtil.setAutorizaciones(autorizaciones);
            }

            detalleFacturaUtil.setDetalleFactura(voDetalleFactura);
            lstDetalle.add(detalleFacturaUtil);
        }

        return lstDetalle;
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jcbDescripcionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbDescripcionItemStateChanged
        //if(jcbCliente.getItemCount==2){
        //  jtxDescripcion.setEnabled(true);
        //}
}//GEN-LAST:event_jcbDescripcionItemStateChanged

    private void jbSelccionaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelccionaClienteActionPerformed
        if (seleccionaCliente == null) {
            seleccionaCliente = new SeleccionaCliente(this);
        }
        seleccionaCliente.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        seleccionaCliente.setAlwaysOnTop(true);
        seleccionaCliente.setLocationRelativeTo(null);
        seleccionaCliente.setModal(true);

        seleccionaCliente.setVisible(true);
    }//GEN-LAST:event_jbSelccionaClienteActionPerformed

    private void jtxSubtotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxSubtotalFocusLost
        // TODO add your handling code here:
}//GEN-LAST:event_jtxSubtotalFocusLost

    private void jtxFolioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxFolioFocusLost

        // TODO add your handling code here:
    }//GEN-LAST:event_jtxFolioFocusLost

    private void jtxTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxTotalFocusLost
        soloNumeros();
}//GEN-LAST:event_jtxTotalFocusLost

    private void jbSelccionaCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelccionaCliente1ActionPerformed
        TableModelDetalle modelo = (TableModelDetalle) jtDetalles.getModel();
        boolean bRevisa = revisaRenglon();

        if (modelo.getRowCount() == 0) {
            bRevisa = true;
        }

        if (bRevisa) {
            JComboBox comboBox = new JComboBox();

            comboBox.addItem(Constantes.OTRO);
            comboBox.addItem(Constantes.FACTURA);
            comboBox.addItem(Constantes.RECIBOS_HONORARIOS);
            comboBox.addItem(Constantes.RECIBOS_ARRENDAMIENTO);
            comboBox.addItem(Constantes.RECIBOS_DONATIVOS);
            comboBox.addItem(Constantes.RECIBOS_PAGO);
            comboBox.addItem(Constantes.NOTA_CARGO);
            comboBox.addItem(Constantes.NOTA_CREDITO);
            comboBox.addItem(Constantes.NOTA_DEVOLUCION);
            comboBox.addItem(Constantes.BONIFICACION_CONSUMO);
            comboBox.addItem(Constantes.CARTA_PODER);
            comboBox.addItem(Constantes.AUTOFACTURAS);
            comboBox.addItem(Constantes.COMPROVANTE_PAGO);
            comboBox.addItem(Constantes.BOLETA_EMPEÑO);
            comboBox.addItem(Constantes.ESTADO_CUENTA_BANCARIO);
            comboBox.addItem(Constantes.ESTADO_CUENTA_CONSUMIBLE);

            TableColumn colum;
            colum = jtDetalles.getColumnModel().getColumn(1);

            colum.setCellEditor(new DefaultCellEditor(comboBox));

            colum = jtDetalles.getColumnModel().getColumn(4);
            colum.setCellEditor(new ButtonCellEditor());
            modelo.addRow(new DetalleFacturaVO(0, "", new BigDecimal("0"), Constantes.OTRO));
            jtDetalles.getColumnModel().getColumn(1).setPreferredWidth(220);
        }
    }//GEN-LAST:event_jbSelccionaCliente1ActionPerformed

    private boolean revisaRenglon() {
        boolean bReturn = true;
        StringBuilder sbMensaje = new StringBuilder("");

        TableModelDetalle modelo = (TableModelDetalle) jtDetalles.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            DetalleFacturaVO object = modelo.getDetalleFacturaVO(i);

            if (object.getCostoTrabajo() != null && object.getCostoTrabajo().intValue()==0) {
                sbMensaje.append("Costo del Trabajo es Requerido. renglon: " + i + "\n");
                bReturn = false;
            } else if (object.getCostoTrabajo() == null) {
                sbMensaje.append("Costo del Trabajo es Requerido. renglon: " + i + "\n");
                bReturn = false;
            }
            if (object.getCantidad()==0) {
                sbMensaje.append("La Cantidad es Requerida. renglon: " + i + "\n");
                bReturn = false;
            }
//            else if (object.getCantidad() == null) {
//                sbMensaje.append("La Cantidad es Requerida. renglon: " + i + "\n");
//                bReturn = false;
//            }
        }

        if (!bReturn) {
            JOptionPane.showMessageDialog(this, sbMensaje.toString(), "Mensaje", JOptionPane.WARNING_MESSAGE);
        }

        return bReturn;
    }

    private void jbEliminaROwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminaROwActionPerformed
        ListSelectionModel listModel = jtDetalles.getSelectionModel();
        TableModelDetalle modelo = (TableModelDetalle) jtDetalles.getModel();

        for (int i = 0; i < jtDetalles.getModel().getRowCount(); i++) {
            if (listModel.isSelectedIndex(i)) {
                modelo.removeRow(i);
                break;
            }
        }
}//GEN-LAST:event_jbEliminaROwActionPerformed

    private void jtxTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxTotalKeyReleased
        BigDecimal bdTotal = null;
        BigDecimal bdSub = null;
        Locale algo = new Locale("es", "MX");
        NumberFormat nfFormato = NumberFormat.getInstance(algo);

        if (!jtxTotal.getText().equals("")) {
            try {
                bdTotal = new BigDecimal(jtxTotal.getText());
                bdTotal = bdTotal.divide(new BigDecimal("1.15"), 2, BigDecimal.ROUND_DOWN);
                jtxSubtotal.setText(nfFormato.format(bdTotal));

                bdSub = new BigDecimal(jtxTotal.getText());
                bdSub = bdSub.subtract(bdTotal);
                jtxIVA.setText(nfFormato.format(bdSub));

            } catch (Exception exception) {
                jtxTotal.setText("");
                JOptionPane.showMessageDialog(this, "El total debe de ser numerico", "Error", JOptionPane.ERROR_MESSAGE);

            }
        }
    // TODO add your handling code here:
    }//GEN-LAST:event_jtxTotalKeyReleased

    private void jtxFolioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxFolioKeyReleased
        BigDecimal bdFolioFactura;
        if (!jtxFolio.getText().equals("")) {
            try {
                bdFolioFactura = new BigDecimal(jtxFolio.getText());
            } catch (Exception exception) {
                jtxFolio.setText("");
                JOptionPane.showMessageDialog(this, "El Folio de Factura debe de ser numerico", "Error", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_jtxFolioKeyReleased

    private void jtxTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
//                Factura factura =  new Factura();
//
//                NimRODTheme nt = new NimRODTheme();
//                nt.setPrimary1(new Color(10, 10, 10));
//                nt.setPrimary2(new Color(100, 100, 100));
//                nt.setPrimary3(new Color(30, 30, 30));
//
//                NimRODLookAndFeel NimRODLF = new NimRODLookAndFeel();
//                NimRODLookAndFeel.setCurrentTheme(nt);
//                try {
//                    UIManager.setLookAndFeel(NimRODLF);
//
//                } catch (UnsupportedLookAndFeelException ex) {
//                    Logger.getLogger(Factura.class.getName()).log(Level.SEVERE, null, ex);
//                }
//
//                SwingUtilities.updateComponentTreeUI(factura);
//
//                factura.setVisible(true);
            }
        });
    }

    public void estado() {
        String sFolio;
        String sTotal;
        StringBuilder sbFaltantes = new StringBuilder("");
        boolean bFaltan = false;

        sFolio = jtxFolio.getText();
        sTotal = jtxTotal.getText();

        if (sFolio.equals("")) {
            sbFaltantes.append("Folio \n");
            bFaltan = true;
        }

        if (bFaltan == true) {
            JOptionPane.showMessageDialog(this, "Los campos:\n" + sbFaltantes + "Son requeridos", "Campos faltantes", JOptionPane.ERROR_MESSAGE);
            bEstado = false;
        } else {

            bEstado = true;
        }
    }

    public void desborde() {
        StringBuilder sbError = new StringBuilder("");
        boolean bEntra = false;


        if (jtxFolio.getText().length() > 10) {
            sbError.append("El campo Folio solo acepta 10 caracteres\n");
            bEntra = true;
        }
        if (jtxTotal.getText().length() > 15) {
            sbError.append("El campo Total solo acepta 15 caracteres \n");
            bEntra = true;
        }

        if (bEntra == true) {
            JOptionPane.showMessageDialog(this, "" + sbError, "Demasiados caracteres", JOptionPane.ERROR_MESSAGE);
            bEstado = true;
        }
    }

    public void regresaId(String iDCliente) {
        System.out.println("iDCliente:::" + iDCliente);
        ServicioCliente cliente = new ServicioCliente();
        clienteVO = cliente.obtieneCliente(new BigDecimal(iDCliente), null);
        jtxNombre.setText(clienteVO.getNombre());
        jtxRFC.setText(clienteVO.getRfc());
        jtxApellido.setText(clienteVO.getApellidos());
    }

    public void regresaIDFactura() {
    }

    public void soloNumeros() {
        BigDecimal bdFactura = null;
        BigDecimal bdTotal = null;
        BigDecimal bdCantidad = null;
        BigDecimal bdSub = null;
        Locale algo = new Locale("es", "MX");
        NumberFormat nfFormato = NumberFormat.getInstance(algo);

        if (!jtxFolio.getText().equals("")) {
            try {
                bdFactura = new BigDecimal(jtxFolio.getText());
            } catch (Exception exception) {
                jtxFolio.setText("");
                JOptionPane.showMessageDialog(this, "El Folio de Factura debe de ser numerico", "Error", JOptionPane.ERROR_MESSAGE);

            }
        }

        if (!jtxTotal.getText().equals("")) {
            try {
                bdTotal = new BigDecimal(jtxTotal.getText());
                bdTotal = bdTotal.divide(new BigDecimal("1.15"), 2, BigDecimal.ROUND_DOWN);
                jtxSubtotal.setText(nfFormato.format(bdTotal));

                bdSub = new BigDecimal(jtxTotal.getText());
                bdSub = bdSub.subtract(bdTotal);
                jtxIVA.setText(nfFormato.format(bdSub));

            } catch (Exception exception) {
                jtxTotal.setText("");
                JOptionPane.showMessageDialog(this, "El total debe de ser numerico", "Error", JOptionPane.ERROR_MESSAGE);

            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAceptar;
    private javax.swing.JButton jbEliminaROw;
    private javax.swing.JButton jbSelccionaCliente;
    private javax.swing.JButton jbSelccionaCliente1;
    private javax.swing.JTable jtDetalles;
    private javax.swing.JTextField jtxApellido;
    private javax.swing.JTextField jtxFolio;
    private javax.swing.JTextField jtxIVA;
    private javax.swing.JTextField jtxNombre;
    private javax.swing.JTextField jtxRFC;
    private javax.swing.JTextField jtxSubtotal;
    private javax.swing.JTextField jtxTotal;
    // End of variables declaration//GEN-END:variables

    @Override
    public void cbPasswprd() {
        jtxTotal.setEnabled(true);
        iEstatus = EDITAR;
        jbAceptar.setText("Guardar");
    }
}
