/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OtroFrame.java
 *
 * Created on 21-abr-2009, 22:36:42
 */
package caafe.factura;

import caafe.autorizacion.Autoriza;
import caafes.def.Clientes;
import caafes.def.Facturas;
import caafes.def.FacturasPK;
import clientes.servicio.ServicioCliente;
import factura.servicio.ServicioFactura;
import java.math.BigDecimal;
import java.text.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.util.List;
import java.util.Locale;
import otro.MiFrame;
import otro.Pass;

/**
 *
 * @author Edgar
 */
public class Factura extends MiFrame {

    private boolean bEstado;
    private Autoriza jfAutoriza;
    private Clientes clienteVO;
    private SeleccionaCliente seleccionaCliente = null;
    private int iEstatus;
    public final static int NUEVO = 100;
    public final static int CONSULTAR = 101;
    public final static int EDITAR = 102;
    private Facturas nuevo;
    private Clientes consultaCliente;
    private Pass frmPass;

    /** Creates new form OtroFrame */
    public Factura() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jbAceptar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jtxNombre = new javax.swing.JTextField();
        jtxRFC = new javax.swing.JTextField();
        jtxApellido = new javax.swing.JTextField();
        jtxCalleNum = new javax.swing.JTextField();
        jtxCodigoPost = new javax.swing.JTextField();
        jtxDelegacionMunicipio = new javax.swing.JTextField();
        jtxCiudad = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtxFolio = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtxCantidad = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtxSubtotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtxIVA = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jtxColonia = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jtxDescripcion = new javax.swing.JTextField();
        jbAutorizacion = new javax.swing.JButton();
        jbSelccionaCliente = new javax.swing.JButton();
        jcbDescripcion = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jtxTotal = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Factura");
        setAlwaysOnTop(true);

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellido");

        jLabel3.setText("RFC");

        jLabel4.setText("Calle y Numero");

        jLabel5.setText("Colonia");

        jLabel6.setText("Codigo Postal");

        jLabel7.setText("Delegaci√≥n/Municipio");

        jLabel8.setText("Ciudad");

        jbAceptar.setText("Agregar");
        jbAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAceptarActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jtxNombre.setEnabled(false);

        jtxRFC.setEnabled(false);

        jtxApellido.setEnabled(false);

        jtxCalleNum.setEnabled(false);

        jtxCodigoPost.setEnabled(false);

        jtxDelegacionMunicipio.setEnabled(false);

        jtxCiudad.setEnabled(false);

        jLabel9.setText("Folio");

        jtxFolio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxFolioFocusLost(evt);
            }
        });

        jLabel10.setText("Cantidad");

        jtxCantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxCantidadFocusLost(evt);
            }
        });

        jLabel11.setText("IVA");

        jtxSubtotal.setEditable(false);
        jtxSubtotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxSubtotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxSubtotalFocusLost(evt);
            }
        });

        jLabel12.setText("Sub Total");

        jtxIVA.setEditable(false);
        jtxIVA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxIVA.setEnabled(false);

        jLabel13.setText("Descripcion");

        jtxColonia.setEnabled(false);

        jLabel15.setText("$");

        jLabel16.setText("$");

        jbAutorizacion.setText("Autorizacion");
        jbAutorizacion.setToolTipText("Agrega Autorizacion");
        jbAutorizacion.setEnabled(false);
        jbAutorizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAutorizacionActionPerformed(evt);
            }
        });

        jbSelccionaCliente.setText("Seleccionar Cliente");
        jbSelccionaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelccionaClienteActionPerformed(evt);
            }
        });

        jcbDescripcion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Otro", "Factura", "Nota de Arrendamiento" }));
        jcbDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDescripcionActionPerformed(evt);
            }
        });

        jLabel14.setText("Total");

        jLabel17.setText("$");

        jtxTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxTotalFocusLost(evt);
            }
        });

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Agregar");
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Salir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Acerca");

        jMenuItem2.setText("Ayuda");
        jMenu2.add(jMenuItem2);

        jMenuItem4.setText("Acerca...");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(90, 90, 90)
                                    .addComponent(jbAutorizacion)
                                    .addGap(18, 18, 18)
                                    .addComponent(jbAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtxDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                                        .addComponent(jcbDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jtxFolio, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jbSelccionaCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                        .addComponent(jtxApellido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                        .addComponent(jtxCalleNum, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                        .addComponent(jtxNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtxRFC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jtxCodigoPost, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(160, 160, 160))
                                        .addComponent(jtxColonia)))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jtxTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jtxIVA, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jtxSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jtxCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtxDelegacionMunicipio, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                        .addComponent(jtxCiudad, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))))
                            .addGap(28, 28, 28)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtxFolio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbSelccionaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxRFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxCalleNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtxColonia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtxCodigoPost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtxDelegacionMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtxCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jtxCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15)
                    .addComponent(jtxSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel16)
                    .addComponent(jtxIVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel17)
                    .addComponent(jtxTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jcbDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAutorizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actualizaForm(int iEstatus, BigDecimal iDCliente) {
        this.iEstatus = iEstatus;

        if (iEstatus == CONSULTAR) {

            jtxApellido.setEnabled(false);
            jtxCalleNum.setEnabled(false);
            jtxCantidad.setEnabled(false);
            jtxCiudad.setEnabled(false);
            jtxCodigoPost.setEnabled(false);
            jtxColonia.setEnabled(false);
            jtxDelegacionMunicipio.setEnabled(false);
            jtxDescripcion.setEnabled(false);
            jtxFolio.setEnabled(false);
            jtxIVA.setEnabled(false);
            jtxNombre.setEnabled(false);
            jtxRFC.setEnabled(false);
            jtxTotal.setEnabled(false);
            jbSelccionaCliente.setVisible(false);
            jcbDescripcion.setEnabled(false);


            ServicioFactura srvFactura = new ServicioFactura();
            ServicioCliente srvCliente = new ServicioCliente();


            nuevo = srvFactura.obtieneFactura(iDCliente);
            consultaCliente = srvCliente.obtieneCliente(nuevo.getFacturasPK().getIdCliente(), null);

            jtxApellido.setText(consultaCliente.getApellidos());
            jtxCalleNum.setText(consultaCliente.getCalleNumero());
            jtxCantidad.setText(String.valueOf(nuevo.getCantidad()));
            jtxCiudad.setText(consultaCliente.getCiudad());
            jtxCodigoPost.setText(consultaCliente.getCodigoPostal());
            jtxColonia.setText(consultaCliente.getColonia());
            jtxDelegacionMunicipio.setText(consultaCliente.getDelegacionMunicipio());
//            jtxDescripcion.setText(nuevo.getDescripcion());
            jtxFolio.setText(String.valueOf(nuevo.getFacturasPK().getIdFolioFactura()));
            
//            jtxIVA.setText(nuevo.getCostoTrabajo().multiply(new BigDecimal(".15")).toString());

            jtxNombre.setText(consultaCliente.getNombre());
            jtxRFC.setText(consultaCliente.getRfc());

//            jtxTotal.setText(nuevo.getCostoTrabajo().toString());
//            jtxDescripcion.setText(nuevo.getDescripcion());


            jbAceptar.setText("Editar");
        }
        if (iEstatus == NUEVO) {
            jtxDescripcion.setEnabled(true);
            jtxFolio.setEnabled(true);
            jtxIVA.setEnabled(true);
            jtxTotal.setEnabled(true);
            jbSelccionaCliente.setVisible(true);
            jcbDescripcion.setEnabled(true);
            jtxCantidad.setEnabled(true);

            jbAceptar.setText("Agregar");
            limpiaForma();
        }
    }
    private void jbAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAceptarActionPerformed
        ServicioFactura srvFactura = new ServicioFactura();


        switch (iEstatus) {
            case NUEVO:
                estado();
                desborde();
                if (bEstado == true) {
                    agregaFactura(srvFactura);
                }
                break;
            case EDITAR:
                modificaFactura(srvFactura);
                JOptionPane.showMessageDialog(this, "Datos Guardados con √©xito", "", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                break;
            case CONSULTAR:
                if (frmPass == null) {
                    frmPass = new Pass(this,1);
                }
                frmPass.limpiaFrame();
                frmPass.setVisible(true);
                frmPass.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                frmPass.setAlwaysOnTop(true);
                frmPass.setLocationRelativeTo(this);
                break;
        }
}//GEN-LAST:event_jbAceptarActionPerformed

    public void modificaFactura(ServicioFactura srvFactura) {
//        nuevo.setCostoTrabajo(new BigDecimal(jtxTotal.getText()));
//        colocaIdentificador();
        nuevo.setExportado(new Character('N'));

        srvFactura.modificaFactura(nuevo);
        limpiaForma();
    }

//    private void colocaValorCB() {
//        String strCheck = nuevo.getDescripcion() != null ? nuevo.getDescripcion() : "";
//
//        if (!strCheck.isEmpty()) {
//            if (nuevo.getDescripcion().startsWith("1")) {
//                jcbDescripcion.setSelectedItem("Otro");
//            }
//            if (nuevo.getDescripcion().startsWith("2")) {
//                jcbDescripcion.setSelectedItem("Factura");
//            }
//            if (nuevo.getDescripcion().startsWith("3")) {
//                jcbDescripcion.setSelectedItem("Nota de Arrendamiento");
//            }
//        }
//    }

    private void limpiaForma() {
        jtxApellido.setText("");
        jtxCalleNum.setText("");
        jtxCantidad.setText("");
        jtxCiudad.setText("");
        jtxCodigoPost.setText("");
        jtxColonia.setText("");
        jtxDelegacionMunicipio.setText("");
        jtxDescripcion.setText("");
        jtxFolio.setText("");
        jtxIVA.setText("");
        jtxNombre.setText("");
        jtxRFC.setText("");
        jtxTotal.setText("");
        jtxSubtotal.setText("");
        jcbDescripcion.setSelectedItem("Otro");
    }

    private void agregaFactura(ServicioFactura srvFactura) {
        String strFactura;
        List<Facturas> lista;

        if (bEstado == true) {
            strFactura = jtxFolio.getText();
            lista = srvFactura.obtieneListaFacturasFolio(new BigDecimal(strFactura));
            if (lista != null) {
                if (lista.isEmpty()) {
                    creaFactura(srvFactura);
                } else {
                    JOptionPane.showMessageDialog(this, "El Folio ya exciste", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                creaFactura(srvFactura);
            }
        }
    }

//    private void colocaIdentificador() {
//        String cbCheck = "";
//        cbCheck = (String) jcbDescripcion.getSelectedItem();
//        if (!cbCheck.isEmpty()) {
//            if (cbCheck.equals("Otro")) {
//                nuevo.setDescripcion("1" + jtxDescripcion.getText());
//            } else if (cbCheck.equals("Factura")) {
//                nuevo.setDescripcion("");
//                nuevo.setDescripcion("2");
//            } else if (cbCheck.equals("Nota de Arrendamiento")) {
//                nuevo.setDescripcion("");
//                nuevo.setDescripcion("3");
//            }
//        }
//    }

    private void creaFactura(ServicioFactura srvFactura) {
        nuevo = new Facturas();
        FacturasPK iD = new FacturasPK(new BigDecimal(jtxFolio.getText()), clienteVO.getIdCliente());
        nuevo.setFacturasPK(iD);

//        nuevo.setCostoTrabajo(new BigDecimal(jtxTotal.getText()));
//        colocaIdentificador();
        nuevo.setExportado(new Character('N'));

        srvFactura.insertaFactura(nuevo);


        if (jfAutoriza == null) {

            jfAutoriza = new Autoriza();
            jfAutoriza.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
//        if (nuevo.getIdAutorizacion() != null) {
//            jfAutoriza.actualizaForm(Factura.CONSULTAR, nuevo.getIdAutorizacion());
//            jbAceptar.setToolTipText("Consultar Autorizacion");
//        } else {
//            jfAutoriza.actualizaForm(Factura.NUEVO, 0);
//            jfAutoriza.creaModelo();
//            jbAceptar.setToolTipText("Agrega Autorizacion");
//        }
        jfAutoriza.setVisible(true);
        jfAutoriza.setAlwaysOnTop(true);
        jfAutoriza.setLocationRelativeTo(null);

        limpiaForma();
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jcbDescripcionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbDescripcionItemStateChanged
        //if(jcbCliente.getItemCount==2){
        //  jtxDescripcion.setEnabled(true);
        //}
}//GEN-LAST:event_jcbDescripcionItemStateChanged

    private void jcbDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDescripcionActionPerformed

        if (String.valueOf(jcbDescripcion.getSelectedItem()).contentEquals("Otro")) {
            jtxDescripcion.setEnabled(true);
            jbAutorizacion.setEnabled(false);
            if (iEstatus != CONSULTAR) {
                jtxDescripcion.setText("");
            }
            if (iEstatus == CONSULTAR) {
                jtxDescripcion.setEnabled(false);
            }
        } else {
            jtxDescripcion.setEnabled(false);
            jbAutorizacion.setEnabled(true);
            if (iEstatus != CONSULTAR) {
                jtxDescripcion.setText("");
            }
            if (iEstatus == CONSULTAR) {
                jtxDescripcion.setEnabled(false);
            }
        }
}//GEN-LAST:event_jcbDescripcionActionPerformed

    private void jbAutorizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAutorizacionActionPerformed

        if (jfAutoriza == null) {

            jfAutoriza = new Autoriza();
            jfAutoriza.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
//        if (nuevo.getIdAutorizacion() != null) {
//            jfAutoriza.actualizaForm(Factura.CONSULTAR, nuevo.getIdAutorizacion());
//            jfAutoriza.creaModelo();
//            jbAceptar.setToolTipText("Consultar Autorizacion");
//
//        } else {
//            jfAutoriza.actualizaForm(Factura.NUEVO, 0);
//            jfAutoriza.creaModelo();
//            jbAceptar.setToolTipText("Agrega Autorizacion");
//        }
        jfAutoriza.setVisible(true);
        jfAutoriza.setAlwaysOnTop(true);
        jfAutoriza.setLocationRelativeTo(null);
}//GEN-LAST:event_jbAutorizacionActionPerformed

    private void jbSelccionaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelccionaClienteActionPerformed
        if (seleccionaCliente == null) {
            seleccionaCliente = new SeleccionaCliente(this);
            seleccionaCliente.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        }
        seleccionaCliente.setAlwaysOnTop(true);
        seleccionaCliente.setLocationRelativeTo(this);
        seleccionaCliente.setVisible(true);
    }//GEN-LAST:event_jbSelccionaClienteActionPerformed

    private void jtxSubtotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxSubtotalFocusLost
       
    // TODO add your handling code here:
}//GEN-LAST:event_jtxSubtotalFocusLost

    private void jtxCantidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxCantidadFocusLost
        soloNumeros();         // TODO add your handling code here:
    }//GEN-LAST:event_jtxCantidadFocusLost

    private void jtxFolioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxFolioFocusLost
        soloNumeros();       // TODO add your handling code here:
    }//GEN-LAST:event_jtxFolioFocusLost

    private void jtxTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxTotalFocusLost
        soloNumeros();
}//GEN-LAST:event_jtxTotalFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
//                Factura factura =  new Factura();
//
//                NimRODTheme nt = new NimRODTheme();
//                nt.setPrimary1(new Color(10, 10, 10));
//                nt.setPrimary2(new Color(100, 100, 100));
//                nt.setPrimary3(new Color(30, 30, 30));
//
//                NimRODLookAndFeel NimRODLF = new NimRODLookAndFeel();
//                NimRODLookAndFeel.setCurrentTheme(nt);
//                try {
//                    UIManager.setLookAndFeel(NimRODLF);
//
//                } catch (UnsupportedLookAndFeelException ex) {
//                    Logger.getLogger(Factura.class.getName()).log(Level.SEVERE, null, ex);
//                }
//
//                SwingUtilities.updateComponentTreeUI(factura);
//
//                factura.setVisible(true);
            }
        });
    }

    public void estado() {
        String sFolio;
        String sCantidad;
        String sTotal;
        StringBuilder sbFaltantes = new StringBuilder("");
        boolean bFaltan = false;

        sFolio = jtxFolio.getText();
        sCantidad = jtxCantidad.getText();
        sTotal = jtxTotal.getText();

        if (sFolio.equals("")) {
            sbFaltantes.append("Folio \n");
            bFaltan = true;
        }
        if (sCantidad.equals("")) {
            sbFaltantes.append("Cantidad\n");
            bFaltan = true;
        }
        if (sTotal.equals("")) {
            sbFaltantes.append("Total\n");
            bFaltan = true;
        }

        if (bFaltan == true) {
            JOptionPane.showMessageDialog(this, "Los campos:\n" + sbFaltantes + "Son requeridos", "Campos faltantes", JOptionPane.ERROR_MESSAGE);
            bEstado = false;
        } else {

            bEstado = true;
        }
    }

    public void desborde() {
        StringBuilder sbError = new StringBuilder("");
        boolean bEntra = false;


        if (jtxFolio.getText().length() > 10) {
            sbError.append("El campo Folio solo acepta 10 caracteres\n");
            bEntra = true;
        }
        if (jtxCantidad.getText().length() > 10) {
            sbError.append("El campo Apellido solo acepta 50 caracteres\n");
            bEntra = true;

        }
        if (jtxTotal.getText().length() > 15) {
            sbError.append("El campo Total solo acepta 10 caracteres \n");
            bEntra = true;
        }
        if (jtxDescripcion.getText().length() > 40) {
            sbError.append("El campo Descripcion solo acepta 40 caracteres\n");
            bEntra = true;
        }

        if (bEntra == true) {
            JOptionPane.showMessageDialog(this, "" + sbError, "Demasiados caracteres", JOptionPane.ERROR_MESSAGE);
            bEstado = true;
        }
    }

    public void regresaId(String iDCliente) {
        System.out.println("iDCliente:::" + iDCliente);
        ServicioCliente cliente = new ServicioCliente();
        clienteVO = cliente.obtieneCliente(new BigDecimal(iDCliente), null);
        jtxNombre.setText(clienteVO.getNombre());
        jtxRFC.setText(clienteVO.getRfc());
        jtxApellido.setText(clienteVO.getApellidos());
        jtxCalleNum.setText(clienteVO.getCalleNumero());
        jtxCiudad.setText(clienteVO.getCiudad());
        jtxCodigoPost.setText(String.valueOf(clienteVO.getCodigoPostal()));
        jtxColonia.setText(clienteVO.getColonia());
        jtxDelegacionMunicipio.setText(clienteVO.getDelegacionMunicipio());
    }

    public void regresaIDFactura() {
    }

    public void soloNumeros() {
        BigDecimal bdFactura = null;
        BigDecimal bdTotal = null;
        BigDecimal bdCantidad = null;
        BigDecimal bdSub = null;
        Locale algo = new Locale("es","MX");
        NumberFormat nfFormato = NumberFormat.getInstance(algo);
        
        if (!jtxFolio.getText().equals("")) {
            try {
                bdFactura = new BigDecimal(jtxFolio.getText());
            } catch (Exception exception) {
                jtxFolio.setText("");
                JOptionPane.showMessageDialog(this, "El Folio de Factura debe de ser numerico", "Error", JOptionPane.ERROR_MESSAGE);

            }
        }

        if (!jtxTotal.getText().equals("")) {
            try {
                bdTotal = new BigDecimal(jtxTotal.getText());
                bdTotal = bdTotal.divide(new BigDecimal("1.15"),2,BigDecimal.ROUND_DOWN);
                jtxSubtotal.setText(nfFormato.format(bdTotal));

                bdSub = new BigDecimal(jtxTotal.getText());
                bdSub = bdSub.subtract(bdTotal);
                jtxIVA.setText(nfFormato.format(bdSub));

            } catch (Exception exception) {
                jtxTotal.setText("");
                JOptionPane.showMessageDialog(this, "El total debe de ser numerico", "Error", JOptionPane.ERROR_MESSAGE);

            }
        }

        if (!jtxCantidad.getText().equals("")) {
            try {
                bdCantidad = new BigDecimal(jtxCantidad.getText());
            } catch (Exception exception) {
                jtxCantidad.setText("");
                JOptionPane.showMessageDialog(this, "La cantidad debe de ser numerica", "Error", JOptionPane.ERROR_MESSAGE);

            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JButton jbAceptar;
    private javax.swing.JButton jbAutorizacion;
    private javax.swing.JButton jbSelccionaCliente;
    private javax.swing.JComboBox jcbDescripcion;
    private javax.swing.JTextField jtxApellido;
    private javax.swing.JTextField jtxCalleNum;
    private javax.swing.JTextField jtxCantidad;
    private javax.swing.JTextField jtxCiudad;
    private javax.swing.JTextField jtxCodigoPost;
    private javax.swing.JTextField jtxColonia;
    private javax.swing.JTextField jtxDelegacionMunicipio;
    private javax.swing.JTextField jtxDescripcion;
    private javax.swing.JTextField jtxFolio;
    private javax.swing.JTextField jtxIVA;
    private javax.swing.JTextField jtxNombre;
    private javax.swing.JTextField jtxRFC;
    private javax.swing.JTextField jtxSubtotal;
    private javax.swing.JTextField jtxTotal;
    // End of variables declaration//GEN-END:variables

    @Override
    public void cbPasswprd() {
        jtxCantidad.setEnabled(true);
        jtxTotal.setEnabled(true);
        jcbDescripcion.setEnabled(true);
        iEstatus = EDITAR;
        jbAceptar.setText("Guardar");

        String strCheck = jcbDescripcion.getSelectedItem().toString();

        if (!strCheck.isEmpty()) {
            if (strCheck.equals("Otro")) {
                jtxDescripcion.setEnabled(true);
            }

        }
    }

}
